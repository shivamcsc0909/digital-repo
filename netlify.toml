# Netlify deployment configuration for Digital Marketing Agency Website
[build]
  # Build command (if using a build process)
  command = "echo 'No build process needed for static site'"
  
  # Directory to publish (root directory for static files)
  publish = "."
  
  # Functions directory (if using Netlify Functions)
  functions = "netlify/functions"

# Build environment variables
[build.environment]
  NODE_VERSION = "18"
  NPM_VERSION = "9"

# Redirect rules for clean URLs and SEO
[[redirects]]
  from = "/home"
  to = "/"
  status = 301
  force = true

[[redirects]]
  from = "/home.html"
  to = "/"
  status = 301
  force = true

[[redirects]]
  from = "/contact-us"
  to = "/contact"
  status = 301
  force = true

[[redirects]]
  from = "/contact-us.html"
  to = "/contact"
  status = 301
  force = true

[[redirects]]
  from = "/about-us"
  to = "/about"
  status = 301
  force = true

# Remove .html extension from URLs
[[redirects]]
  from = "/*.html"
  to = "/:splat"
  status = 301
  force = true

# Add .html extension internally for file serving
[[redirects]]
  from = "/*"
  to = "/:splat.html"
  status = 200

# Form handling for contact form
[[redirects]]
  from = "/contact-form"
  to = "/contact"
  status = 200

# Newsletter signup handling
[[redirects]]
  from = "/newsletter-signup"
  to = "/blog"
  status = 200

# 404 page
[[redirects]]
  from = "/*"
  to = "/404.html"
  status = 404

# Custom headers for security and performance
[[headers]]
  for = "/*"
  [headers.values]
    # Security headers
    X-Frame-Options = "SAMEORIGIN"
    X-Content-Type-Options = "nosniff"
    X-XSS-Protection = "1; mode=block"
    Referrer-Policy = "strict-origin-when-cross-origin"
    Strict-Transport-Security = "max-age=63072000; includeSubDomains; preload"
    
    # Content Security Policy
    Content-Security-Policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com https://www.google-analytics.com https://www.googletagmanager.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com https://cdnjs.cloudflare.com; img-src 'self' data: https:; connect-src 'self' https://www.google-analytics.com; frame-src https://www.google.com;"

# Cache headers for static assets
[[headers]]
  for = "/assets/*"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.css"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.js"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.woff2"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.webp"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.png"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.jpg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

[[headers]]
  for = "*.svg"
  [headers.values]
    Cache-Control = "public, max-age=31536000, immutable"

# HTML files cache
[[headers]]
  for = "*.html"
  [headers.values]
    Cache-Control = "public, max-age=86400"

# Form processing (Netlify Forms)
[forms]
  # Contact form
  [forms.contact]
    name = "contact-form"
    action = "/contact"
    fields = ["firstName", "lastName", "email", "phone", "company", "website", "service", "budget", "message"]
    
  # Newsletter form
  [forms.newsletter]
    name = "newsletter-signup"
    action = "/blog"
    fields = ["email"]

# Functions (if using serverless functions)
# [functions]
#   directory = "netlify/functions"

# Plugin configuration
[[plugins]]
  package = "@netlify/plugin-sitemap"
  [plugins.inputs]
    buildDir = "."
    exclude = [
      "/admin/**",
      "/private/**",
      "/404.html"
    ]

# Branch deploy configuration
[context.production]
  command = "echo 'Production deployment'"
  
[context.deploy-preview]
  command = "echo 'Deploy preview'"
  
[context.branch-deploy]
  command = "echo 'Branch deployment'"

# Performance optimizations
[build.processing]
  skip_processing = false

[build.processing.css]
  bundle = true
  minify = true

[build.processing.js]
  bundle = true
  minify = true

[build.processing.html]
  pretty_urls = true

[build.processing.images]
  compress = true